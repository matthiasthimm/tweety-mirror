%
% simuworld example 2 
%
% this example shows how to use effects, declared by
% * (star) blocks. effects take place automatically
%   each world step independently of agent actions.
%

% initial world description / pre action
$$ {
	% world: an undirected fully connected graph
	vertex(1). vertex(2). vertex(3). vertex(4). vertex(5).
	vertex(6). vertex(7). vertex(8). vertex(9). vertex(10).
	adj(A,B) :- vertex(A), vertex(B), A != B.	
	
	% agent starting positions	
	at(1,alice).
	at(6,bob).
	
	% traps last for 5 turns
	trap_duration(5).
	
	% trap effect holds 3 turns
	trap_effect_time(3).
	
	% agent may only put a trap every 2 turns
	trap_recharge(2).		  
}

% goto action
!goto(X,Ag) {
	C: at(Y,Ag), adj(Y,X).
	A: at(X,Ag).
	D: at(Y,Ag).
}

% snare action, an agent can setup a trap
% if there is already a trap at that place,
% the action causes no effect
!snare(X,Ag) {
	C: at(Y,Ag), adj(Y,X), not trap_at(X,T), #int(T), trap_duration(DUR).
	A: trap_at(X,DUR).
}

% agents may disarm fields
!disarm(X,Ag) {
	C: at(Y,Ag), adj(X,Y), trap_at(X,T).
}

% no two agents at the same vertex
:- at(X,Ag1), at(X,Ag2), Ag1 != Ag2.

% no agent at multiple vertices
:- at(X,Ag), at(Y,Ag), X != Y.

% agents may set up traps at vertices
% whenever an agent walks steps onto trap,
% it is incapacitated for some turns.

% anonymous event handler for traps
* {
	C: trapped(Ag,X), agent(Ag), X > 1, Y = X - 1.
	A: trapped(Ag,Y).
	D: trapped(Ag,X).
}

% block handler for trapped agents
* {
	C: trapped(Ag,X).
	B: goto(_,Ag), disarm(_,Ag).
}


% trap handler
% traps run out after a while
* {
	C: trap_at(X,T), T2 = T - 1, T > 1, not at(X,Ag), agent(Ag).
	A: trap_at(X,T2).
	D: trap_at(X,T).
}

% trap will be deleted if no agent ran into it
* {
	C: trap_at(X,1), not at(X,Ag), agent(Ag).
	D: trap_at(X,1).
}

% if an agents step on a trap, they cannot move any longer
* {
	C: trap_at(X,T), agent(Ag), at(X,Ag), trap_effect_time(U).
	A: trapped(Ag,U).
	D: trap_at(X,T).
	B: goto(_,Ag).
}


% final / post action
## {

}
